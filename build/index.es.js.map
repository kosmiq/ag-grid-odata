{"version":3,"file":"index.es.js","sources":["../node_modules/tslib/tslib.es6.js","../src/functions/escapeRegExp.ts","../src/functions/replaceAll.ts","../src/classes/OdataProvider.ts","../src/OdataProvider.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","function escapeRegExp(string) {\r\n\treturn string.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\r\n}\r\n\r\nexport default escapeRegExp;\r\n","import escapeRegExp from \"./escapeRegExp\";\r\n\r\nfunction replaceAll(str: string, search: string, replacement: string): string {\r\n\treturn str.replace(new RegExp(escapeRegExp(search), \"g\"), replacement);\r\n}\r\n\r\nexport default replaceAll;\r\n","import {ColDef, ColGroupDef, ColumnVO, IGetRowsParams, IServerSideGetRowsParams, IServerSideGetRowsRequest} from \"@ag-grid-community/all-modules\";\r\nimport replaceAll from \"../functions/replaceAll\";\r\nimport CancelablePromise from \"../types/CancelablePromise\";\r\nimport OdataQueryExtendFull from \"../types/OdataQueryExtendFull\";\r\nimport OdataQueryExtendOptions from \"../types/OdataQueryExtendOptions\";\r\nimport OdataQueryOptions from \"../types/OdataQueryOptions\";\r\nimport PivotResultDat from \"../types/PivotResultDat\";\r\nimport OdataProviderOptions from \"./OdataProviderOptions\";\r\n\r\nclass OdataProvider implements OdataProviderOptions {\r\n\t/**\r\n\t * Function for call odata api\r\n\t */\r\n\tcallApi: (query: string) => Promise<any>;\r\n\t/**\r\n\t * Name of field contain count of record results in grouping odata query\r\n\t * @default childCount\r\n\t */\r\n\tgroupCountFieldName: string = \"childCount\";\r\n\t/**\r\n\t * Use in odata build query\r\n\t * @default false\r\n\t */\r\n\tisCaseSensitiveStringFilter: boolean = false;\r\n\t/**\r\n\t * Callback for extend odata query options for implement user logic\r\n\t */\r\n\tbeforeRequest: (\r\n\t\toptions: OdataQueryOptions,\r\n\t\tprovider: OdataProvider,\r\n\t\trequest: IGetRowsParams | IServerSideGetRowsRequest\r\n\t) => void;\r\n\t/**\r\n\t  * Callback for pivot or group for aplly column ag-grid settings\r\n\t  * @example\r\n\t  * <pre><code>\r\n\t  * beforeSetSecondaryColumns = secondaryColumns => {\r\n\t   for (let i = 0; i < secondaryColumns.length; i++) {\r\n\t\t const col = secondaryColumns[i]\r\n\t\t if (col.children) {\r\n\t\t   beforeSetSecondaryColumns(col.children)\r\n\t\t } else {\r\n\t\t   //Aplly new setting for group dyncamic created column\r\n\t\t   // col.cellClassRules =\r\n\t\t   // col.valueFormatter =\r\n\t\t }\r\n\t   }\r\n\t }\r\n\t  * </pre></code>\r\n\t  */\r\n\tbeforeSetSecondaryColumns: (\r\n\t\tsecondaryColDefs: (ColDef | ColGroupDef)[]\r\n\t) => void;\r\n\t/**\r\n\t  * Callback invoked after load data\r\n\t  * @param options odata provider options\r\n\t  * @param rowData data for ag-grid\r\n\t  * @param totalCount total count records\r\n\t  *\r\n\t  * @example\r\n\t  * <pre><code>\r\n\t\t   afterLoadData = (options, rowData, totalCount) => {\r\n\t\t\t   if (options.skip === 0 && rowData.length > 0) {\r\n\t\t\t   gridApi.columnController.autoSizeAllColumns()\r\n\t\t\t   }\r\n\t\t   }\r\n\t  * </code></pre>\r\n\t  */\r\n\tafterLoadData: (\r\n\t\toptions: OdataQueryExtendOptions,\r\n\t\trowData: any[],\r\n\t\ttotalCount: number\r\n\t) => void;\r\n\t/**\r\n\t * Callback for catch error\r\n\t */\r\n\tsetError: (error: any, params: IGetRowsParams | IServerSideGetRowsParams) => void;\r\n\t/**\r\n\t * List of columns by id/field are case sensitive for build odata query\r\n\t */\r\n\tcaseSensitiveColumns?: string[];\r\n\tcancelPromice: CancelablePromise;\r\n\tconstructor(options: OdataProviderOptions) {\r\n\t\tObject.assign(this, options);\r\n\t\tif (this.callApi == null) {\r\n\t\t\tthrow new Error(\"callApi must be specified\");\r\n\t\t}\r\n\t\tif (typeof this.callApi !== \"function\") {\r\n\t\t\tthrow new Error(\"callApi must be a function\");\r\n\t\t}\r\n\t\tif (\r\n\t\t\tthis.beforeRequest != null &&\r\n\t\t\ttypeof this.beforeRequest !== \"function\"\r\n\t\t) {\r\n\t\t\tthrow new Error(\"beforeRequest must be a function\");\r\n\t\t}\r\n\t\tif (\r\n\t\t\tthis.afterLoadData != null &&\r\n\t\t\ttypeof this.afterLoadData !== \"function\"\r\n\t\t) {\r\n\t\t\tthrow new Error(\"afterLoadData must be a function\");\r\n\t\t}\r\n\t\tif (this.setError != null && typeof this.setError !== \"function\") {\r\n\t\t\tthrow new Error(\"setError must be a function\");\r\n\t\t}\r\n\t\tthis.cancelPromice = this.createCancelablePromise();\r\n\t}\r\n\r\n\t/**Creator a cancelable Promise */\r\n\tcreateCancelablePromise = (): CancelablePromise => {\r\n\t\tlet cancel;\r\n\t\tconst pr = new Promise((_, reject) => {\r\n\t\t\tcancel = reject;\r\n\t\t}).catch(() => { });\r\n\t\treturn {\r\n\t\t\tpromise: pr,\r\n\t\t\tcancel,\r\n\t\t};\r\n\t};\r\n\t/**Odata query operations */\r\n\todataOperator = {\r\n\t\t// Logical\r\n\t\tequals: (col: string, value1: string): string => `${col} eq ${value1}`,\r\n\t\tnotEqual: (col: string, value1: string): string => `${col} ne ${value1}`,\r\n\t\tlessThan: (col: string, value1: string): string => `${col} lt ${value1}`,\r\n\t\tlessThanOrEqual: (col: string, value1: string): string =>\r\n\t\t\t`${col} le ${value1}`,\r\n\t\tgreaterThan: (col: string, value1: string): string => `${col} gt ${value1}`,\r\n\t\tgreaterThanOrEqual: (col: string, value1: string): string =>\r\n\t\t\t`${col} ge ${value1}`,\r\n\t\tinRange: (col: string, value1: string, value2: any): string =>\r\n\t\t\t`(${col} ge ${value1} and ${col} le ${value2})`,\r\n\t\t// String\r\n\t\tequalsStr: (\r\n\t\t\tcol: string,\r\n\t\t\tvalue1: string,\r\n\t\t\tisCaseSensitiveStringFilter: boolean\r\n\t\t): string =>\r\n\t\t\t`${this.ifTolowerCol(\r\n\t\t\t\tcol,\r\n\t\t\t\tisCaseSensitiveStringFilter\r\n\t\t\t)} eq ${this.ifTolower(value1, isCaseSensitiveStringFilter)}`,\r\n\t\tnotEqualStr: (\r\n\t\t\tcol: string,\r\n\t\t\tvalue1: string,\r\n\t\t\tisCaseSensitiveStringFilter: boolean\r\n\t\t): string =>\r\n\t\t\t`${this.ifTolowerCol(\r\n\t\t\t\tcol,\r\n\t\t\t\tisCaseSensitiveStringFilter\r\n\t\t\t)} ne ${this.ifTolower(value1, isCaseSensitiveStringFilter)}`,\r\n\t\tcontains: (\r\n\t\t\tcol: string,\r\n\t\t\tvalue1: string,\r\n\t\t\tisCaseSensitiveStringFilter: boolean\r\n\t\t): string =>\r\n\t\t\t`contains(${this.ifTolowerCol(\r\n\t\t\t\tcol,\r\n\t\t\t\tisCaseSensitiveStringFilter\r\n\t\t\t)},${this.ifTolower(value1, isCaseSensitiveStringFilter)})`,\r\n\t\tnotContains: (\r\n\t\t\tcol: string,\r\n\t\t\tvalue1: string,\r\n\t\t\tisCaseSensitiveStringFilter: boolean\r\n\t\t): string =>\r\n\t\t\t`contains(${this.ifTolowerCol(\r\n\t\t\t\tcol,\r\n\t\t\t\tisCaseSensitiveStringFilter\r\n\t\t\t)},${this.ifTolower(value1, isCaseSensitiveStringFilter)}) eq false`,\r\n\t\tstartsWith: (\r\n\t\t\tcol: string,\r\n\t\t\tvalue1: string,\r\n\t\t\tisCaseSensitiveStringFilter: boolean\r\n\t\t): string =>\r\n\t\t\t`startswith(${this.ifTolowerCol(\r\n\t\t\t\tcol,\r\n\t\t\t\tisCaseSensitiveStringFilter\r\n\t\t\t)},${this.ifTolower(value1, isCaseSensitiveStringFilter)})  eq true`,\r\n\t\tendsWith: (\r\n\t\t\tcol: string,\r\n\t\t\tvalue1: string,\r\n\t\t\tisCaseSensitiveStringFilter: boolean\r\n\t\t): string =>\r\n\t\t\t`endswith(${this.ifTolowerCol(\r\n\t\t\t\tcol,\r\n\t\t\t\tisCaseSensitiveStringFilter\r\n\t\t\t)},${this.ifTolower(value1, isCaseSensitiveStringFilter)})  eq true`,\r\n\t\tinStr: (\r\n\t\t\tcol: string,\r\n\t\t\tvalues: string[],\r\n\t\t\tisCaseSensitiveStringFilter: boolean\r\n\t\t): string =>\r\n\t\t\t`${this.ifTolowerCol(col, isCaseSensitiveStringFilter)} in (${values\r\n\t\t\t\t.map((x) => `'${this.ifTolower(this.encode(x), isCaseSensitiveStringFilter)}'`)\r\n\t\t\t\t.join()})`,\r\n\t\tin: (col: string, values: string[]) =>\r\n\t\t\t`${col} in (${values.map((x) => `${this.encode(x)}`).join()})`,\r\n\t\tnotIn: (col: string, values: string[]) =>\r\n\t\t\t`not (${col} in (${values.map((x) => `${x}`).join()}))`,\r\n\t\t// Date\r\n\t\ttrunc: (col: string): string => `date(${col})`,\r\n\t};\r\n\r\n\t/**\r\n\t * Apply tolower for column in odata syntax\r\n\t * @param col column name\r\n\t * @param isCaseSensitiveStringFilter need apply tolower\r\n\t */\r\n\tifTolowerCol = (col: string, isCaseSensitiveStringFilter: boolean): string =>\r\n\t\tisCaseSensitiveStringFilter ? col : `tolower(${col})`;\r\n\r\n\t/**\r\n\t *\r\n\t * @param value string value\r\n\t * @param isCaseSensitiveStringFilter  need apply tolower\r\n\t */\r\n\tifTolower = (value: string, isCaseSensitiveStringFilter: boolean): string =>\r\n\t\tisCaseSensitiveStringFilter ? value : value ? value.toLowerCase() : value;\r\n\t/**\r\n\t * Odata aggregation operations\r\n\t */\r\n\todataAggregation = {\r\n\t\t// Logical\r\n\t\tsum: (col: string, asField?: any): string =>\r\n\t\t\t`${col} with sum as ${col || asField}`,\r\n\t\tmin: (col: string, asField?: any): string =>\r\n\t\t\t`${col} with min as ${col || asField}`,\r\n\t\tmax: (col: string, asField?: any): string =>\r\n\t\t\t`${col} with max as ${col || asField}`,\r\n\t\tavg: (col: string, asField?: any): string =>\r\n\t\t\t`${col} with average as ${col || asField}`,\r\n\t\tcount: (col: string, asField?: any): string =>\r\n\t\t\t`$count as ${col || asField}`,\r\n\t};\r\n\t/**\r\n\t * Odata query builder\r\n\t * @param options parameter for odata query\r\n\t */\r\n\ttoQuery = (options: OdataQueryExtendFull): string => {\r\n\t\tlet path: string[] = [];\r\n\t\tif (options.count) {\r\n\t\t\tpath.push(\"$count=true\");\r\n\t\t}\r\n\t\tif (options.skip) {\r\n\t\t\tpath.push(`$skip=${options.skip}`);\r\n\t\t}\r\n\t\tif (options.top) {\r\n\t\t\tpath.push(`$top=${options.top}`);\r\n\t\t}\r\n\t\tif (options.sort && options.sort.length > 0) {\r\n\t\t\tpath.push(\"$orderby=\" + options.sort.join(\",\"));\r\n\t\t}\r\n\t\tif (options.filter && options.filter.length > 0) {\r\n\t\t\tpath.push(\"$filter=\" + options.filter.join(\" and \"));\r\n\t\t}\r\n\t\tif (options.apply && options.apply.length > 0) {\r\n\t\t\tpath.push(\"$apply=\" + options.apply.join(\"/\"));\r\n\t\t}\r\n\t\tif (options.expand && options.expand.length > 0) {\r\n\t\t\tpath.push(\"$expand=\" + options.expand.join(\",\"));\r\n\t\t}\r\n\t\tlet query: string = \"\";\r\n\t\tif (path.length > 0) {\r\n\t\t\tquery = \"?\" + path.join(\"&\");\r\n\t\t}\r\n\t\treturn query;\r\n\t};\r\n\t/**\r\n\t * Add quotes for string value\r\n\t * @param value string value\r\n\t */\r\n\tencode = (value: string): string =>\r\n\t\tthis.isStrVal(value) ? replaceAll(value, \"'\", \"''\") : value;\r\n\t/**\r\n\t * Conctat to date a time for create datetime format for odata query\r\n\t * @param value date string\r\n\t */\r\n\ttoDateTime = (value: string): string | null => {\r\n\t\tconst dt = new Date(value);\r\n\t\tif (isNaN(dt.getTime())) return null;\r\n\t\tconst dt1 = new Date(\r\n\t\t\tDate.UTC(dt.getFullYear(), dt.getMonth(), dt.getDate())\r\n\t\t);\r\n\t\treturn dt1.toISOString();\r\n\t};\r\n\t/**\r\n\t *\r\n\t * @param colName columnName\r\n\t * @returns is CaseSensitive for column\r\n\t */\r\n\tprivate getIsNeedCaseSensitive = (colName: string) => {\r\n\t\tif (!this.isCaseSensitiveStringFilter &&\r\n\t\t\tthis.caseSensitiveColumns &&\r\n\t\t\tthis.caseSensitiveColumns.length > 0) {\r\n\t\t\treturn this.caseSensitiveColumns.indexOf(colName) >= 0;\r\n\t\t}\r\n\t\treturn this.isCaseSensitiveStringFilter;\r\n\t}\r\n\t/**\r\n\t * Convert ag-grid column filter to odata query\r\n\t * @param colName columnName\r\n\t * @param col ag-grid column\r\n\t */\r\n\tprivate getFilterOdata = (colName: string, col: any): string => {\r\n\t\tconst me = this;\r\n\t\tconst isCaseSensitiveStringFilter = me.getIsNeedCaseSensitive(colName)\r\n\t\tcolName = replaceAll(colName, \".\", \"/\");\r\n\t\tcolName = me.getWrapColumnName(colName);\r\n\t\tswitch (col.filterType) {\r\n\t\t\tcase \"number\":\r\n\t\t\t\treturn me.odataOperator[col.type](colName, col.filter, col.filterTo);\r\n\t\t\tcase \"text\": {\r\n\t\t\t\tlet operatorName = col.type;\r\n\t\t\t\tconst filter = me.encode(col.filter);\r\n\t\t\t\t// let filterTo = me.encode(col.filterTo);\r\n\t\t\t\tif (\r\n\t\t\t\t\t(operatorName === \"equals\" || operatorName === \"notEqual\") &&\r\n\t\t\t\t\t!isCaseSensitiveStringFilter\r\n\t\t\t\t) {\r\n\t\t\t\t\toperatorName += \"Str\";\r\n\t\t\t\t}\r\n\t\t\t\treturn me.odataOperator[operatorName](\r\n\t\t\t\t\tcolName,\r\n\t\t\t\t\t`'${filter}'`,\r\n\t\t\t\t\tisCaseSensitiveStringFilter\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tcase \"date\":\r\n\t\t\t\tif (col.dateFrom != null && me.toDateTime(col.dateFrom) != null &&\r\n\t\t\t\t\t(col.dateTo == null || (col.dateTo != null && me.toDateTime(col.dateTo) != null))) {\r\n\t\t\t\t\treturn me.odataOperator[col.type](\r\n\t\t\t\t\t\tcolName,\r\n\t\t\t\t\t\t`${me.toDateTime(col.dateFrom)}`,\r\n\t\t\t\t\t\t`${me.toDateTime(col.dateTo)}`\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"set\":\r\n\t\t\t\treturn col.values.length > 0\r\n\t\t\t\t\t? me.odataOperator.inStr(\r\n\t\t\t\t\t\tcolName,\r\n\t\t\t\t\t\tcol.values,\r\n\t\t\t\t\t\tisCaseSensitiveStringFilter\r\n\t\t\t\t\t)\r\n\t\t\t\t\t: \"\";\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn \"\";\r\n\t};\r\n\r\n\t/**\r\n\t * Extract value from record by path to field\r\n\t * @param field path to column value\r\n\t * @param obj  record\r\n\t */\r\n\tprivate getValue(field: string, obj: any): any {\r\n\t\tconst paths = field.split('.');\r\n\t\tif (paths.length === 1) {\r\n\t\t\treturn obj[field]\r\n\t\t} else {\r\n\t\t\treturn paths.reduce((object, path) => {\r\n\t\t\t\treturn (object || {})[path]; // Oliver Steele's pattern\r\n\t\t\t}, obj)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Caclulate pivot data for ag-grid from odata\r\n\t * @param pivotCols pivot columns\r\n\t * @param rowGroupCols row group columns\r\n\t * @param valueCols value columns\r\n\t * @param data odata result\r\n\t * @param countField count field name\r\n\t */\r\n\tprivate getPivot = (\r\n\t\tpivotCols: ColumnVO[],\r\n\t\trowGroupCols: ColumnVO[],\r\n\t\tvalueCols: ColumnVO[],\r\n\t\tdata: any[],\r\n\t\tcountField: string\r\n\t): PivotResultDat => {\r\n\t\t// assume 1 pivot col and 1 value col for this example\r\n\t\tconst me = this;\r\n\t\tconst pivotData: any[] = [];\r\n\t\tconst aggColsList: any[] = [];\r\n\r\n\t\tconst colKeyExistsMap: any = {};\r\n\r\n\t\tconst secondaryColDefs: any[] = [];\r\n\t\tconst secondaryColDefsMap = {};\r\n\r\n\t\tdata.forEach(function (item) {\r\n\t\t\tvar pivotValues: string[] = [];\r\n\t\t\tpivotCols.forEach(function (pivotCol) {\r\n\t\t\t\tvar pivotField = pivotCol.id;\r\n\t\t\t\tvar pivotValue = me.getValue(pivotField, item);\r\n\t\t\t\tif (\r\n\t\t\t\t\tpivotValue !== null &&\r\n\t\t\t\t\tpivotValue !== undefined &&\r\n\t\t\t\t\tpivotValue.toString\r\n\t\t\t\t) {\r\n\t\t\t\t\tpivotValues.push(pivotValue.toString());\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpivotValues.push(\"-\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// var pivotValue = item[pivotField].toString();\r\n\t\t\tvar pivotItem = {};\r\n\r\n\t\t\tvalueCols.forEach(function (valueCol) {\r\n\t\t\t\tvar valField = valueCol.id;\r\n\t\t\t\tvar colKey = createColKey(pivotValues, valField);\r\n\r\n\t\t\t\tvar value = me.getValue(valField, item);\r\n\t\t\t\tpivotItem[colKey] = value;\r\n\r\n\t\t\t\tif (!colKeyExistsMap[colKey]) {\r\n\t\t\t\t\taddNewAggCol(colKey, valueCol);\r\n\t\t\t\t\taddNewSecondaryColDef(colKey, pivotValues, valueCol);\r\n\t\t\t\t\tcolKeyExistsMap[colKey] = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (countField) {\r\n\t\t\t\tpivotItem[countField] = me.getValue(countField, item);\r\n\t\t\t}\r\n\r\n\t\t\trowGroupCols.forEach(function (rowGroupCol) {\r\n\t\t\t\tvar rowGroupField = rowGroupCol.id.split('.')[0];\r\n\t\t\t\tpivotItem[rowGroupField] = item[rowGroupField];\r\n\t\t\t});\r\n\r\n\t\t\tpivotData.push(pivotItem);\r\n\t\t});\r\n\r\n\t\tfunction addNewAggCol(colKey: string, valueCol: ColumnVO): void {\r\n\t\t\tvar newCol = {\r\n\t\t\t\tid: colKey,\r\n\t\t\t\tfield: colKey,\r\n\t\t\t\taggFunc: valueCol.aggFunc,\r\n\t\t\t};\r\n\t\t\taggColsList.push(newCol);\r\n\t\t}\r\n\r\n\t\tfunction addNewSecondaryColDef(colKey, pivotValues, valueCol) {\r\n\t\t\tvar parentGroup: any = null;\r\n\r\n\t\t\tvar keyParts: any = [];\r\n\r\n\t\t\tpivotValues.forEach(function (pivotValue: any) {\r\n\t\t\t\tkeyParts.push(pivotValue);\r\n\t\t\t\tvar colKey = createColKey(keyParts);\r\n\t\t\t\tvar groupColDef: any = secondaryColDefsMap[colKey];\r\n\t\t\t\tif (!groupColDef) {\r\n\t\t\t\t\tgroupColDef = {\r\n\t\t\t\t\t\tgroupId: colKey,\r\n\t\t\t\t\t\theaderName: pivotValue,\r\n\t\t\t\t\t\tchildren: [],\r\n\t\t\t\t\t};\r\n\t\t\t\t\tsecondaryColDefsMap[colKey] = groupColDef;\r\n\t\t\t\t\tif (parentGroup) {\r\n\t\t\t\t\t\tparentGroup.children.push(groupColDef);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsecondaryColDefs.push(groupColDef);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tparentGroup = groupColDef;\r\n\t\t\t});\r\n\r\n\t\t\tparentGroup.children.push({\r\n\t\t\t\tcolId: colKey,\r\n\t\t\t\theaderName: valueCol.aggFunc + \"(\" + valueCol.displayName + \")\",\r\n\t\t\t\tfield: colKey,\r\n\t\t\t\tsuppressMenu: true,\r\n\t\t\t\tsortable: false,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction createColKey(pivotValues: string[], valueField?: string): string {\r\n\t\t\tvar result = pivotValues.join(\"|\");\r\n\t\t\tif (valueField !== undefined) {\r\n\t\t\t\tresult += \"|\" + valueField;\r\n\t\t\t}\r\n\t\t\tresult = replaceAll(result, \".\", \"*\");\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tdata: pivotData,\r\n\t\t\taggCols: aggColsList,\r\n\t\t\tsecondaryColDefs: secondaryColDefs,\r\n\t\t};\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @param rowData array odata result\r\n\t * @param rowGroupCols row group columns\r\n\t * @param groupKeys what groups the user is viewing\r\n\t * @param countField count field name\r\n\t */\r\n\tprivate buildGroupsFromData = (\r\n\t\trowData: any[],\r\n\t\trowGroupCols: ColumnVO[],\r\n\t\tgroupKeys: string[],\r\n\t\tcountField: string\r\n\t): any[] => {\r\n\t\tconst me = this;\r\n\t\tlet rowGroupCol = rowGroupCols[groupKeys.length];\r\n\t\tlet field = rowGroupCol.id;\r\n\t\tlet mappedRowData = me.groupBy(rowData, field);\r\n\t\tlet groups: any = [];\r\n\r\n\t\tme.iterateObject(mappedRowData, function (key, rowData) {\r\n\t\t\tvar groupItem = me.aggregateList(rowData, countField);\r\n\t\t\tgroupItem[field] = key;\r\n\t\t\tgroups.push(groupItem);\r\n\t\t});\r\n\t\treturn groups;\r\n\t};\r\n\r\n\t/**\r\n\t * Internal function for execute callback function for each property of object\r\n\t * @param object object contained odata grouped result\r\n\t * @param callback function do somthing\r\n\t */\r\n\tprivate iterateObject = (\r\n\t\tobject: any,\r\n\t\tcallback: (key: string, rowData: any[]) => void\r\n\t): void => {\r\n\t\tif (!object) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst keys = Object.keys(object);\r\n\t\tfor (let i = 0; i < keys.length; i++) {\r\n\t\t\tconst key = keys[i];\r\n\t\t\tconst value = object[key];\r\n\t\t\tcallback(key, value);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Prepeare grouped data\r\n\t * @param rowData array odata result\r\n\t * @param field grouping field\r\n\t */\r\n\tprivate groupBy = (rowData: any[], field: string): any => {\r\n\t\tvar result = {};\r\n\t\tconst me = this;\r\n\t\trowData.forEach(function (item) {\r\n\t\t\tvar key = me.getValue(field, item);\r\n\t\t\tvar listForThisKey = result[key];\r\n\t\t\tif (!listForThisKey) {\r\n\t\t\t\tlistForThisKey = [];\r\n\t\t\t\tresult[key] = listForThisKey;\r\n\t\t\t}\r\n\t\t\tlistForThisKey.push(item);\r\n\t\t});\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/**\r\n\t * Calculate total count records in group\r\n\t * @param rowData array odata result data\r\n\t * @param countField field contained count of all records\r\n\t */\r\n\tprivate aggregateList = (rowData: any[], countField: string): any => {\r\n\t\tvar result = {};\r\n\t\trowData.forEach((row) => {\r\n\t\t\tif (countField && row[countField] != null) {\r\n\t\t\t\tconst totalCount = (result[countField] || 0) + (row[countField] || 0);\r\n\t\t\t\tdelete row[countField];\r\n\t\t\t\tresult[countField] = totalCount;\r\n\t\t\t}\r\n\t\t\tresult = Object.assign(result, row);\r\n\t\t});\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/**\r\n\t   * Calculate distinct values for input field from Odata api\r\n\t   * @param field The field of the row to get the cells data from\r\n\t   * @param callback The function for return distinct values for input field\r\n\t   * @param beforeRequest The function for customize request\r\n\t   * @example\r\n\t   * <pre><code>\r\n\t   *  const setFilterValuesFuncParams = params => {\r\n\t   *    const me = this\r\n\t   *    const col = params.colDef.field\r\n\t   *    const storeName = me.getStoreName(col)\r\n\t   *    const callback = data => {\r\n\t   *      if (data) {\r\n\t   *        me.setState({ [storeName]: data })\r\n\t   *        params.success(data)\r\n\t   *      }\r\n\t   *    }\r\n\t   *    odataProviderInstance.getFilterValuesParams(params.colDef.field, callback)\r\n\t   *  }\r\n\t   *\r\n\t   * ///....\r\n\t   *      <AgGridColumn\r\n\t\t\t\t\tfield=\"product\"\r\n\t\t\t\t\theaderName={'PRODUCT'}\r\n\t\t\t\t\tfilter=\"agSetColumnFilter\"\r\n\t\t\t\t\t// rowGroup\r\n\t\t\t\t\t// enablePivot\r\n\t\t\t\t\tenableRowGroup\r\n\t\t\t\t\tfilterParams={{\r\n\t\t\t\t\t  values: setFilterValuesFuncParams,\r\n\t\t\t\t\t  newRowsAction: 'keep'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t// filterParams={{caseSensitive: true}}\r\n\t\t\t\t  />\r\n\t   * </code></pre>\r\n\t   */\r\n\tgetFilterValuesParams = (\r\n\t\tfield: string,\r\n\t\tcallback: (data: any[]) => void,\r\n\t\tbeforeRequest: (options: OdataQueryExtendFull) => void | undefined\r\n\t): void => {\r\n\t\tconst me = this;\r\n\t\tconst options: OdataQueryExtendFull = {\r\n\t\t\tapply: [`groupby((${me.getWrapColumnName(field)}))`],\r\n\t\t}\r\n\t\tif (beforeRequest) {\r\n\t\t\tbeforeRequest(options)\r\n\t\t}\r\n\t\tme.callApi(\r\n\t\t\tme.toQuery(options)\r\n\t\t).then((x) => {\r\n\t\t\tif (x) {\r\n\t\t\t\tlet values = me.getOdataResult(x);\r\n\t\t\t\tcallback(values.map((y) => y[field]));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t/**\r\n\t * Detect is string value\r\n\t * @param value\r\n\t */\r\n\tisStrVal = (value: any): boolean => typeof value === \"string\";\r\n\t/**\r\n\t * Extartc values from odata response\r\n\t * @param response\r\n\t */\r\n\tprivate getOdataResult = (response: any): any =>\r\n\t\tArray.isArray(response) ? response : response.value;\r\n\t/**\r\n\t * Endocing column name to odata notation\r\n\t * @param colName column name\r\n\t */\r\n\tprivate getWrapColumnName = (colName: string | undefined): string =>\r\n\t\tcolName ? replaceAll(colName, \".\", \"/\") : '';\r\n\t/**\r\n\t * grid calls this to get rows for IServerSideDatasource\r\n\t * @param params ag-grid details for the request\r\n\t */\r\n\t/**\r\n\t * grid calls this to get rows implement\r\n\t * @param params ag-grid details for the request\r\n\t */\r\n\tpublic getRows(params: IGetRowsParams | IServerSideGetRowsParams): void {\r\n\t\tconst me = this;\r\n\t\tconst childCount = me.groupCountFieldName;\r\n\t\tconst isServerMode = \"request\" in params;\r\n\t\tconst request = isServerMode\r\n\t\t\t? (params as IServerSideGetRowsParams).request\r\n\t\t\t: (params as IGetRowsParams);\r\n\t\tconst requestSrv = request as IServerSideGetRowsRequest;\r\n\r\n\t\tconst pivotActive = !isServerMode\r\n\t\t\t? false\r\n\t\t\t: requestSrv.pivotMode &&\r\n\t\t\trequestSrv.pivotCols.length > 0 &&\r\n\t\t\trequestSrv.valueCols.length > 0;\r\n\r\n\t\tif (!pivotActive) {\r\n\t\t\t(params as any).parentNode.columnApi.setSecondaryColumns([]);\r\n\t\t}\r\n\t\tconst options = me.getOdataOptions(params);\r\n\t\tconst query = me.toQuery(options);\r\n\t\tif (\r\n\t\t\toptions.skip === 0 &&\r\n\t\t\t(!isServerMode ||\r\n\t\t\t\t(isServerMode &&\r\n\t\t\t\t\t(params as IServerSideGetRowsParams).parentNode.level === -1))\r\n\t\t) {\r\n\t\t\tme.cancelPromice.cancel();\r\n\t\t\tme.cancelPromice = me.createCancelablePromise();\r\n\t\t}\r\n\t\tPromise.race([me.cancelPromice.promise, me.callApi(query)]).then(\r\n\t\t\tasync (x) => {\r\n\t\t\t\tif (!x) {\r\n\t\t\t\t\tparams.failCallback();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst values = me.getOdataResult(x);\r\n\t\t\t\t\tif (!pivotActive) {\r\n\t\t\t\t\t\tif (!options.apply) {\r\n\t\t\t\t\t\t\tparams.successCallback(values, x[\"@odata.count\"]);\r\n\t\t\t\t\t\t\tif (this.afterLoadData) {\r\n\t\t\t\t\t\t\t\tthis.afterLoadData(options, values, x[\"@odata.count\"]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet count = values.length;\r\n\t\t\t\t\t\t\tif (count === options.top && options.skip === 0) {\r\n\t\t\t\t\t\t\t\t// Если мы получили группировку с числом экземпляров больше чем у мы запросили, то делаем запрос общего количества\r\n\t\t\t\t\t\t\t\tme.callApi(query + \"/aggregate($count as count)\").then((y) => {\r\n\t\t\t\t\t\t\t\t\tcount = me.getOdataResult(y)[0].count;\r\n\t\t\t\t\t\t\t\t\tparams.successCallback(values, count);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (options.skip != null && options.skip > 0) {\r\n\t\t\t\t\t\t\t\t\tcount = null;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tparams.successCallback(values, count);\r\n\t\t\t\t\t\t\t\tif (this.afterLoadData) {\r\n\t\t\t\t\t\t\t\t\tthis.afterLoadData(options, values, count);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet rowData = me.getOdataResult(x);\r\n\t\t\t\t\t\t// Check count\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\trowData.length === options.top &&\r\n\t\t\t\t\t\t\toptions.skip === 0 &&\r\n\t\t\t\t\t\t\trequestSrv.groupKeys.length === 0\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tlet eof = false;\r\n\t\t\t\t\t\t\twhile (!eof) {\r\n\t\t\t\t\t\t\t\toptions.skip += options.top || 0;\r\n\t\t\t\t\t\t\t\tconst subQuery = me.toQuery(options);\r\n\t\t\t\t\t\t\t\tconst newRowData = await me.callApi(subQuery);\r\n\t\t\t\t\t\t\t\tif (!newRowData) {\r\n\t\t\t\t\t\t\t\t\tparams.failCallback();\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\teof = newRowData.length !== options.top;\r\n\t\t\t\t\t\t\t\trowData = rowData.concat(newRowData);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst pivotResult = me.getPivot(\r\n\t\t\t\t\t\t\trequestSrv.pivotCols,\r\n\t\t\t\t\t\t\trequestSrv.rowGroupCols,\r\n\t\t\t\t\t\t\trequestSrv.valueCols,\r\n\t\t\t\t\t\t\trowData,\r\n\t\t\t\t\t\t\tchildCount\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\trowData = pivotResult.data;\r\n\t\t\t\t\t\tconst secondaryColDefs = pivotResult.secondaryColDefs;\r\n\t\t\t\t\t\trowData = me.buildGroupsFromData(\r\n\t\t\t\t\t\t\trowData,\r\n\t\t\t\t\t\t\trequestSrv.rowGroupCols,\r\n\t\t\t\t\t\t\trequestSrv.groupKeys,\r\n\t\t\t\t\t\t\tchildCount\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tconst totalCount =\r\n\t\t\t\t\t\t\trequestSrv.groupKeys.length === 0\r\n\t\t\t\t\t\t\t\t? rowData.length\r\n\t\t\t\t\t\t\t\t: rowData.length === options.top\r\n\t\t\t\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t\t\t\t: rowData.length;\r\n\t\t\t\t\t\t// if (totalCount > (options.top || 0)) {\r\n\t\t\t\t\t\t//   const serverSideBlock = (params as any).parentNode.rowModel\r\n\t\t\t\t\t\t//     .rowNodeBlockLoader.blocks[0];\r\n\t\t\t\t\t\t//   serverSideBlock.rowNodeCacheParams.blockSize = totalCount;\r\n\t\t\t\t\t\t//   serverSideBlock.endRow = serverSideBlock.startRow + totalCount;\r\n\t\t\t\t\t\t//   serverSideBlock.createRowNodes();\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\tparams.successCallback(rowData, totalCount);\r\n\t\t\t\t\t\tif (this.afterLoadData) {\r\n\t\t\t\t\t\t\tthis.afterLoadData(options, rowData, totalCount);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (requestSrv.groupKeys.length === 0) {\r\n\t\t\t\t\t\t\tif (this.beforeSetSecondaryColumns) {\r\n\t\t\t\t\t\t\t\tthis.beforeSetSecondaryColumns(secondaryColDefs);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t(params as any).parentNode.columnApi.setSecondaryColumns(\r\n\t\t\t\t\t\t\t\tsecondaryColDefs\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(err) => {\r\n\t\t\t\tparams.successCallback([], 0)\r\n\t\t\t\tif (this.setError) {\r\n\t\t\t\t\tthis.setError(err, params);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\t/**\r\n\t * Generate odata options for build query from ag-grid request\r\n\t * @param params ag-grid details for the request\r\n\t */\r\n\tgetOdataOptions = (\r\n\t\tparams: IGetRowsParams | IServerSideGetRowsParams\r\n\t): OdataQueryExtendFull => {\r\n\t\tconst me = this;\r\n\t\tconst options: OdataQueryExtendFull = {};\r\n\t\tconst isServerMode = \"request\" in params;\r\n\t\tconst request = isServerMode\r\n\t\t\t? (params as IServerSideGetRowsParams).request\r\n\t\t\t: (params as IGetRowsParams);\r\n\t\tconst childCount = me.groupCountFieldName;\r\n\t\tif (this.beforeRequest) {\r\n\t\t\tthis.beforeRequest(options, this, request);\r\n\t\t}\r\n\t\tif (request.sortModel.length > 0) {\r\n\t\t\tconst sort = options.sort || [];\r\n\t\t\tfor (let i = 0; i < request.sortModel.length; i++) {\r\n\t\t\t\tconst col = request.sortModel[i];\r\n\t\t\t\tlet colName = me.getWrapColumnName(col.colId);\r\n\t\t\t\tif (col.sort !== \"asc\") {\r\n\t\t\t\t\tcolName += \" desc\";\r\n\t\t\t\t}\r\n\t\t\t\tsort.push(colName);\r\n\t\t\t}\r\n\t\t\toptions.sort = sort;\r\n\t\t}\r\n\r\n\t\tconst filter = options.filter || [];\r\n\t\tfor (const colName in request.filterModel) {\r\n\t\t\tif (request.filterModel.hasOwnProperty(colName)) {\r\n\t\t\t\tconst col = request.filterModel[colName];\r\n\t\t\t\tlet colFilter = \"\";\r\n\t\t\t\tif (!col.operator) {\r\n\t\t\t\t\tcolFilter = me.getFilterOdata(colName, col);\r\n\t\t\t\t\tif (colFilter) {\r\n\t\t\t\t\t\tfilter.push(colFilter);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst condition1 = me.getFilterOdata(colName, col.condition1);\r\n\t\t\t\t\tconst condition2 = me.getFilterOdata(colName, col.condition2);\r\n\t\t\t\t\tif (condition1 && condition2) {\r\n\t\t\t\t\t\tcolFilter = `(${condition1} ${col.operator.toLowerCase()} ${condition2})`;\r\n\t\t\t\t\t\tfilter.push(colFilter);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet pivotActive = false;\r\n\r\n\t\tconst apply = options.apply || [];\r\n\t\tif (isServerMode) {\r\n\t\t\tconst requestSrv = request as IServerSideGetRowsRequest;\r\n\t\t\tpivotActive =\r\n\t\t\t\trequestSrv.pivotMode &&\r\n\t\t\t\trequestSrv.pivotCols.length > 0 &&\r\n\t\t\t\trequestSrv.valueCols.length > 0;\r\n\t\t\tif (requestSrv.rowGroupCols.length > 0) {\r\n\t\t\t\tconst filterGroupBy: string[] = [];\r\n\t\t\t\tif (requestSrv.groupKeys.length < requestSrv.rowGroupCols.length) {\r\n\t\t\t\t\t// If request only groups\r\n\t\t\t\t\tfor (let idx = 0; idx < requestSrv.groupKeys.length; idx++) {\r\n\t\t\t\t\t\tconst colValue = requestSrv.groupKeys[idx];\r\n\t\t\t\t\t\tconst condition = `${me.getWrapColumnName(\r\n\t\t\t\t\t\t\trequestSrv.rowGroupCols[idx].field\r\n\t\t\t\t\t\t)} eq ${(me.isStrVal(colValue) ? \"'\" : \"\") +\r\n\t\t\t\t\t\tme.encode(colValue) +\r\n\t\t\t\t\t\t(me.isStrVal(colValue) ? \"'\" : \"\")\r\n\t\t\t\t\t\t\t}`;\r\n\t\t\t\t\t\tfilterGroupBy.push(condition);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (filterGroupBy.length > 0 || filter.length > 0) {\r\n\t\t\t\t\t\t// Filters must by first\r\n\t\t\t\t\t\tapply.push(`filter(${filterGroupBy.concat(filter).join(\" and \")})`);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst aggregate: string[] = [];\r\n\t\t\t\t\tif (childCount) {\r\n\t\t\t\t\t\taggregate.push(me.odataAggregation.count(childCount));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (requestSrv.valueCols.length > 0) {\r\n\t\t\t\t\t\tfor (let idx = 0; idx < requestSrv.valueCols.length; idx++) {\r\n\t\t\t\t\t\t\tconst colValue = requestSrv.valueCols[idx];\r\n\t\t\t\t\t\t\tcolValue.aggFunc && aggregate.push(\r\n\t\t\t\t\t\t\t\tme.odataAggregation[colValue.aggFunc](\r\n\t\t\t\t\t\t\t\t\tme.getWrapColumnName(colValue.field)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet groups = [\r\n\t\t\t\t\t\tme.getWrapColumnName(\r\n\t\t\t\t\t\t\trequestSrv.rowGroupCols[requestSrv.groupKeys.length].field\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst sort = options.sort || [];\r\n\t\t\t\t\tconst sortColOnly = sort.map((x) => x.split(\" \")[0]);\r\n\t\t\t\t\tif (pivotActive) {\r\n\t\t\t\t\t\tgroups = groups.concat(\r\n\t\t\t\t\t\t\trequestSrv.pivotCols.map((x) => me.getWrapColumnName(x.field))\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tgroups.forEach((x) => {\r\n\t\t\t\t\t\t\tif (sortColOnly.indexOf(x) < 0) {\r\n\t\t\t\t\t\t\t\tsort.push(x);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\toptions.sort = sort;\r\n\t\t\t\t\tapply.push(\r\n\t\t\t\t\t\t`groupby((${groups.join(\",\")})${aggregate.length > 0 ? `,aggregate(${aggregate.join(\",\")})` : \"\"\r\n\t\t\t\t\t\t})`\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\toptions.apply = apply;\r\n\t\t\t\t\tif (options.sort && options.sort.length > 0) {\r\n\t\t\t\t\t\toptions.sort = options.sort.filter(x => groups.indexOf(x.split(' ')[0]) >= 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// delete options.sort;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// If request rowData by group filter\r\n\t\t\t\t\tfor (let idx = 0; idx < requestSrv.groupKeys.length; idx++) {\r\n\t\t\t\t\t\tconst colValue = requestSrv.groupKeys[idx];\r\n\t\t\t\t\t\tconst condition = `${me.getWrapColumnName(\r\n\t\t\t\t\t\t\trequestSrv.rowGroupCols[idx].field\r\n\t\t\t\t\t\t)} eq ${(me.isStrVal(colValue) ? \"'\" : \"\") +\r\n\t\t\t\t\t\tme.encode(colValue) +\r\n\t\t\t\t\t\t(me.isStrVal(colValue) ? \"'\" : \"\")\r\n\t\t\t\t\t\t\t}`;\r\n\t\t\t\t\t\tfilter.push(condition);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (filter.length > 0) {\r\n\t\t\toptions.filter = filter;\r\n\t\t}\r\n\t\tif (apply.length > 0) {\r\n\t\t\toptions.apply = apply;\r\n\t\t\tdelete options.filter;\r\n\t\t\tdelete options.expand;\r\n\t\t\t// options.sort = null;\r\n\t\t}\r\n\t\toptions.skip = request.startRow;\r\n\t\toptions.top = request.endRow - request.startRow;\r\n\r\n\t\tif (!options.apply && options.skip === 0) {\r\n\t\t\toptions.count = true;\r\n\t\t}\r\n\t\treturn options;\r\n\t};\r\n\t/**\r\n\t * Generate odata query from ag-grid request\r\n\t * @param params ag-grid details for the request\r\n\t */\r\n\tgetOdataQuery = (params: IGetRowsParams | IServerSideGetRowsParams): string =>\r\n\t\tthis.toQuery(this.getOdataOptions(params));\r\n}\r\n\r\nexport default OdataProvider;\r\n","import {IServerSideGetRowsParams} from \"@ag-grid-enterprise/all-modules\";\r\nimport OdataProvider from \"./classes/OdataProvider\";\r\n\r\nexport class OdataProviderClient extends OdataProvider {\r\n  public override getRows(params: IServerSideGetRowsParams) {\r\n    super.getRows(params);\r\n  }\r\n}\r\nexport class OdataServerSideProvider extends OdataProvider {\r\n  public override getRows(params: IServerSideGetRowsParams): void {\r\n    super.getRows(params);\r\n  }\r\n}\r\n\r\nexport {default as OdataProvider} from \"./classes/OdataProvider\";\r\n"],"names":[],"mappings":"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"}